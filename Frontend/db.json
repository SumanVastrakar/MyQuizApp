{
  "quiz": [
    {
      "category": "javascript",
      "ques": "When the switch statement matches the expression with the given labels, how is the comparison done?",
      "a": "Both the datatype and the result of the expression are compared",
      "b": "only the datatype of the expression is compared",
      "c": "only the value of the expression is compared",
      "d": "None of the above",
      "answer": "D",
      "details": "Switch performs an ‘===’ based comparison, i.e both the value of the expression and its datatype is compared.",
      "points": 20,
      "id": 1
    },
    {
      "category": "javascript",
      "ques": "What keyword is used to check whether a given property is valid or not?",
      "a": "in",
      "b": "is in",
      "c": "exists",
      "d": "lies",
      "answer": "C",
      "details": "The in keyword is used to check whether the given property is valid or not in Javascript.",
      "points": 20,
      "id": 2
    },
    {
      "category": "javascript",
      "ques": "When an operator’s value is NULL, the typeof returned by the unary operator is:",
      "a": "Boolean",
      "b": "Undefined",
      "c": "Integer",
      "d": "Object",
      "answer": "D",
      "details": "Any NULL value of operator will always return typeof object.",
      "points" : 10,
      "id": 3
    },
    {
      "category": "javascript",
      "ques": "What does the Javascript “debugger” statement do?",
      "a": "It will debug all the errors in the program at runtime",
      "b": "It acts as a breakpoint in a program",
      "c": "It will debug error in the current statement if any",
      "d": "All the above",
      "answer": "B",
      "details": "‘debugger’ statement is used to setup the breakup points at probable points of error in the code snippet, using the debugger window.",
      "points": "20",
      "id": 4
    },
    {
      "category": "javascript",
      "ques": "What is the output of the following code snippet?  ===> print(NaN === NaN)",
      "a": "true",
      "b": "false",
      "c": "undefined",
      "d": "Error",
      "answer": "A",
      "details": "In Javascript, NaN is not considered to be equal to NaN even after using the strict equality operator.",
      "points": 10,
      "id": 5
    },
    {
      "category": "javascript",
      "ques": "What will be the output of the following code snippet? ===> print(typeof(NaN));" ,
      "a": "Object",
      "b": "Number",
      "c": "String",
      "d": "None of the above",
      "answer": "B",
      "details": "NaN in Javascript is defined to be of type number despite its name(not a number).",
      "points": 10,
      "id": 6
    },
    {
      "category": "javascript",
      "ques": "What does the ‘toLocateString()’ method do in JS?" ,
      "a": "Return a localised object representation",
      "b": "Returns a parsed string",
      "c": "Returns a localized string representation of an object",
      "d": "None of the above",
      "answer": "C",
      "details": "The ‘toLocateString()’ method in JS returns a localized string representation of an object.",
      "points": 10,
      "id": 7
    },
    {
      "category": "javascript",
      "ques": "The process in which an object or data structure is translated into a format suitable for transferral over a network, or storage is called?" ,
      "a": "Object Serialization",
      "b": "Object Encapsulation",
      "c": "Object Inheritence",
      "d": "None of the above",
      "answer": "A",
      "details": "Object Serialization is the process in which an object or data structure is translated into a format suitable for transferral over a network, or storage.",
      "points": 20,
      "id": 8
    },
    {
      "category": "javascript",
      "ques": "Which function is used to serialize an object into a JSON string in Javascript?" ,
      "a": "stringify()",
      "b": "parse()",
      "c": "convert()",
      "d": "None of the above",
      "answer": "A",
      "details": "The JSON.stringify() function is used to convert a JSON object into string format.",
      "points": 10,
      "id": 9
    },
    {
      "category": "javascript",
      "ques": "Which of the following are closures in Javascript?" ,
      "a": "Variables",
      "b": "Functions",
      "c": "Objects",
      "d": "All of the above",
      "answer": "D",
      "details": "Every time a function is created in JS, a closure is created. So, all closures are functions and functions have a scope chain that is associated with them.",
      "points": 10,
      "id": 10
    },
    {
      "category": "javascript",
      "ques": "Which of the following is not a Javascript framework?" ,
      "a": "Node",
      "b": "Vue",
      "c": "React",
      "d": "Cassandra",
      "answer": "D",
      "details": "Other than Cassandra, all the other options are Javascript frameworks.",
      "points": 10,
      "id": 11
    },
    {
      "category": "javascript",
      "ques": "How to stop an interval timer in Javascript?" ,
      "a": "clearInterval",
      "b": "clearTimer",
      "c": "intervalOver",
      "d": "None of the above",
      "answer": "A",
      "details": "clearInterval is used to stop an interval timer in JS.",
      "points": 10,
      "id": 12
    },
    {
      "category": "javascript",
      "ques": "How are objects compared when they are checked with the strict equality operator?" ,
      "a": "The contents of the objects are compared",
      "b": "Their references are compared",
      "c": "Both A and B",
      "d": "None of the above",
      "answer": "B",
      "details": "In Javascript, objects are passed by reference and hence the strict equality operator compares their references.",
      "points": 10,
      "id": 13
    },
    {
      "category": "javascript",
      "ques": "Which object in Javascript doesn’t have a prototype?" ,
      "a": "Base Object",
      "b": "All objects have a prototype",
      "c": "None of the objects have a prototype",
      "d": "None of the above",
      "answer": "A",
      "details": "Base objects are the only objects in Javascript that don’t have a prototype.",
      "points": 10,
      "id": 14
    },
    {
      "category": "javascript",
      "ques": "Which of the following are not server-side Javascript objects?" ,
      "a": "Date",
      "b": "File Upload",
      "c": "Fuction",
      "d": "All of the above",
      "answer": "D",
      "details": "All of the above options are not server-side Javascript objects.",
      "points": 10,
      "id": 15
    },
    {
      "category": "HTML",
      "ques": "html comment should be enclosed between" ,
      "a": "<!– and — >",
      "b": "<! And !>",
      "c": "<!— and –“”",
      "d": "None of the above",
      "answer": "A",
      "details": "A",
      "points": 10,
      "id": 16
    },
    {
      "category": "HTML",
      "ques": "The following html tag is used to display the content as a moving text" ,
      "a": "<marquee>",
      "b": "</img>",
      "c": "<a href>",
      "d": "<br/>",
      "answer": "A",
      "details": "A",
      "points": 10,
      "id": 17
    },
    {
      "category": "HTML",
      "ques": "What is the correct syntax of doctype in HTML5?" ,
      "a": "</doctype html>",
      "b": "<doctype html>",
      "c": "<doctype html!>",
      "d": "<!doctype html>",
      "answer": "D",
      "details": "The correct syntax of HTML5 doctype is <!doctype html>, doctype is the very first thing to write in HTML5. <!doctype html> or <!DOCTYPE HTML> both are same because ‘doctype’ keyword is not case sensitive.",
      "points": 10,
      "id": 18
    },
    {
      "category": "HTML",
      "ques": "Which of the following is used to read an HTML page and render it?" ,
      "a": "Web server",
      "b": "Web Network",
      "c": "Web Browser",
      "d": "Web Matrix",
      "answer": "C",
      "details": "A web browser (commonly referred to as a browser) is a software application for retrieving, presenting and traversing information resources on the World Wide Web. A web server process, store and display output to the client as per their request. Web matrix is a discontinued cloud-connected website builder and HTML editor for Windows.",
      "points": 10,
      "id": 19
    },
    {
      "category": "HTML",
      "ques": "Which of the following is not a difference between HTML and XHTML?" ,
      "a": "Charset in both html and xhtml is “text/html”",
      "b": "Tags and attributes are case-insensitive in HTML but not in XHTML",
      "c": "Special characters must be escaped using character entities in XHTML unlike HTML",
      "d": "Charset in html is “text/html” where as in xhtml it is “application/xml+xhtml”",
      "answer": "A",
      "details": " HTML is case insensitive while XHTML is case sensitive. In XHTML, special characters can be escaped using character entites but not in HTML. Charset in HTML is “text/html” where as it is “application/xml+xhtml” for XHTML.",
      "points": 10,
      "id": 20
    },
    {
      "category": "HTML",
      "ques": "What is DOM in HTML?" ,
      "a": "Language dependent application programming",
      "b": "Hierarchy of objects in ASP.NET",
      "c": "Application programming interface",
      "d": "Convention for representing and interacting with objects in html documents",
      "answer": "D",
      "details": "The Document Object Model is a cross-platform and language-independent application programming interface that treats an HTML, XHTML, or XML document as a tree structure. A document can be viewed as a logical tree with help of DOM Model.",
      "points": 20,
      "id": 21
    },
    {
      "category": "HTML",
      "ques": "In which part of the HTML metadata is contained?" ,
      "a": "Head tag",
      "b": "Title tag",
      "c": "Html tag",
      "d": "Body tag",
      "answer": "A",
      "details": "Metadata is information about data. The meta tag provides metadata/meta information about the HTML document. Metadata will not be displayed on the page. Metadata is present in head. The body tag defines document’s body. A title tag is an HTML element which specifies the title of a web page.",
      "points": 10,
      "id": 22
    },
    {
      "category": "HTML",
      "ques": "Which element is used to get highlighted text in HTML5?" ,
      "a": "<u>",
      "b": "<mark>",
      "c": "<highlight>",
      "d": "<b>",
      "answer": "B",
      "details": "The <mark> element is used to highlight a section of text. It is useful for quoting a text or if one wants to bring attention to the text. The <b> tag is used to make text/paragraph bold. <u> tag is used to underline the text you wanted.  <p>This is the example.<mark> I like this dog. </mark></p>",
      "points": 10,
      "id": 23
    },
    {
      "category": "HTML",
      "ques": "Which of the following is not a HTML5 tag?" ,
      "a": "<track>",
      "b": "<video>",
      "c": "<slider>",
      "d": "<source>",
      "answer": "D",
      "details": "<video> tag is used to display video clips in HTML5. Multiple media resources for media elements is specified by <source> tag. Text track for media elements i.e. <audio> & <video> is provided by <track> tag in HTML5. There is no such thing as slider tag in HTML5.",
      "points": 10,
      "id": 24
    },
    {
      "category": "HTML",
      "ques": "HTML is a subset of ___________" ,
      "a": "SGMT",
      "b": "SGML",
      "c": "SGME",
      "d": "XHTML",
      "answer": "B",
      "details": "HTML is a subset of SGML. SGML (Standard Generalized Markup Language) is a standard for specifying a document markup language or tag set.",
      "points": 20,
      "id": 25
    },
    {
      "category": "HTML",
      "ques": "Which HTML element is used for short quote?" ,
      "a": "<em>",
      "b": "<abbr>",
      "c": "<q>",
      "d": "<blockquote>",
      "answer": "C",
      "details": "<em> element indicates emphasis, browser will show the contents of <em> element in italic. A section which is quoted from another source is specified by <blockquote>. The <abbr> defines abbreviation. We used <q> element for shorter quote. Browser put quote around <q> element.",
      "points": 20,
      "id": 26
    },
    {
      "category": "CSS",
      "ques": "What is CSS?" ,
      "a": "CSS is a style sheet language",
      "b": "CSS is designed to separate the presentation and content, including layout, colors, and fonts",
      "c": "CSS is the language used to style the HTML documents",
      "d": "All of the mentioned",
      "answer": "D",
      "details": "CSS is a style sheet language that stands for Cascading Style Sheet and is used to style HTML documents. CSS is mainly designed to separate the presentation and content, including layout, colors, and fonts.",
      "points": 10,
      "id": 27
    },
    {
      "category": "CSS",
      "ques": "Which of the following CSS selectors are used to specify a group of elements?" ,
      "a": "tag",
      "b": "id",
      "c": "class",
      "d": "both class and tag",
      "answer": "C",
      "details": "Class selectors are used to specify a group of elements. Id selector specifies a particular unique element",
      "points": 10,
      "id": 28
    },
    {
      "category": "CSS",
      "ques": "What will be the output of following CSS code snippet?===> h1 {color: red text-decoration: underline; font-style: italic;}" ,
      "a": "color: red, text-decoration: underline works",
      "b": "only font-style: italic works",
      "c": "color: red, text-decoration: underline and font-style: italic all works",
      "d": "text-decoration: underline and font-style: italic works",
      "answer": "B",
      "details": "In this case, we should see the browser continue to parse the value of color as “red text-decoration: underline” before it sees a closing semicolon. The font-style property that follows would then be used. Because the color property has an illegal value, it should be ignored.",
      "points": 10,
      "id": 29
    },
    {
      "category": "CSS",
      "ques": "Which of the following is the correct syntax to link an external style sheet in the HTML file?" ,
      "a": "<link rel=”stylesheet” href=”style.css” />",
      "b": "<link rel=”stylesheet” src=”style.css” />",
      "c": "<style rel=”stylesheet” src=”style.css” />",
      "d": "<style rel=”stylesheet” link=”style.css” />",
      "answer": "A",
      "details": "HTML file must contain a reference to the external style sheet file. External style sheet files are defined within the <link> element and it should be inside the <head> section. href attribute specifies the URL of the linked resource.",
      "points": 10,
      "id": 30
    },
    {
      "category": "CSS",
      "ques": "Which of the following function defines a linear gradient as a CSS image?" ,
      "a": "gradient()",
      "b": "linear-gradient()",
      "c": "grayscale()",
      "d": "image()",
      "answer": "B",
      "details": "linear-gradient() function defines a linear gradient as a CSS image. Creating a linear gradient function we should define minimum of two color stops. color stops will tell the browser which colors to use in the gradients for smooth transitions.",
      "points": 10,
      "id": 31
    },
    {
      "category": "CSS",
      "ques": "Which of the following CSS property can be used to set the image as a border instead of the border style?" ,
      "a": "background-image-source",
      "b": "background-image",
      "c": "border-image-source",
      "d": "border-image",
      "answer": "C",
      "details": "The border-image-source property specifies the path to the image to be used as a border (instead of the normal border around an element).",
      "points": 20,
      "id": 32
    },
    {
      "category": "CSS",
      "ques": "Which of the following CSS property sets what kind of line decorations are added to an element, such as underlines, overlines, etc?" ,
      "a": "text-decoration",
      "b": "text-style",
      "c": "text-decoration-line",
      "d": "text-line",
      "answer": "C",
      "details": "The text-decoration-line property defines the type of line decorations that are added to an element, such as underlines, overlines, etc.",
      "points": 10,
      "id": 33
    },
    {
      "category": "CSS",
      "ques": "Which of the following property allows a marquee to be used in the case of a text-overflow?" ,
      "a": "overflow-marquee",
      "b": "overflow-style",
      "c": "overflow-text",
      "d": "none of the mentioned",
      "answer": "B",
      "details": "Explanation: overflow-style is a CSS property that allows a marquee to be used in the case of a text-overflow.",
      "points": 10,
      "id": 34
    },
    {
      "category": "CSS",
      "ques": "Which of the following CSS3 property can be used to allow line breaks within words?" ,
      "a": "line-break",
      "b": "line-wrap",
      "c": "word-wrap",
      "d": "word-break",
      "answer": "D",
      "details": "Explanation: word-break property can be used to allow line breaks within the words. Syntax:word-break: break-all | keep-all | normal",
      "points": 10,
      "id": 35
    },
    {
      "category": "React",
      "ques": "Which of the following are the advantages of React.js?" ,
      "a": "React.js can increase the application's performance with Virtual DOM.",
      "b": "React.js is easy to integrate with other frameworks such as Angular, BackboneJS since it is only a view library.",
      "c": "React.js can render both on client and server side.",
      "d": "All of the above",
      "answer": "D",
      "details": "D is the correct option as all of the above statements are the advantages of React.js.",
      "points": 10,
      "id": 36
    },
    {
      "category": "React",
      "ques": "Which of the following acts as the input of a class-based component?" ,
      "a": "Class",
      "b": "Factory",
      "c": "Render",
      "d": "Props",
      "answer": "D",
      "details": "D props is the correct answer.",
      "points": 10,
      "id": 37
    },
    {
      "category": "React",
      "ques": "What is a state in React?" ,
      "a": "A permanent storage.",
      "b": "External storage of the component.",
      "c": "Internal storage of the component.",
      "d": "None of the above.",
      "answer": "C",
      "details": "B is the correct answer.",
      "points": 10,
      "id": 38
    },
    {
      "category": "React",
      "ques": "What are the two ways to handle data in React?" ,
      "a": "State & Props",
      "b": "Services & Components",
      "c": "State & Services",
      "d": "State & Component",
      "answer": "A",
      "details": "State & Props is the correct answer.",
      "points": 10,
      "id": 39
    },
    {
      "category": "React",
      "ques": "Which of the following is a must API for every React.js component?" ,
      "a": "SetinitialComponent",
      "b": "renderComponent",
      "c": "render",
      "d": "All of the above",
      "answer": "B",
      "details": " B is the correct option. The renderComponent is a must API for every React.js component.",
      "points": 10,
      "id": 40
    },
    {
      "category": "React",
      "ques": "Does React.js create a VIRTUAL DOM in the memory?" ,
      "a": "True",
      "b": "False",
      "c": "Can be true or false",
      "d": "Cannot say anything",
      "answer": "A",
      "details": "A is the correct option as React.js creates a VIRTUAL DOM in the memory.",
      "points": 10,
      "id": 41
    },
    {
      "category": "React",
      "ques": " What is the use of webpack command in React.js?" ,
      "a": "The webpack command is used to transpile all the JavaScript down into one file.",
      "b": "It runs React local development server.",
      "c": "It is a module bundler.",
      "d": "None of the above.",
      "answer": "C",
      "details": "C is the correct answer. The webpack command is a module bundler.",
      "points": 10,
      "id": 42
    },
    {
      "category": "React",
      "ques": " Which of the following is used to pass data to a component from outside in React.js?" ,
      "a": "SetState",
      "b": "Render with arguments",
      "c": "Props",
      "d": "PropTypes",
      "answer": "C",
      "details": "C is the correct answer. Props are used to pass data to a component from outside in React.js.",
      "points": 10,
      "id": 43
    },
    {
      "category": "React",
      "ques": "Which of the following function is used to change the state of the React.js component?" ,
      "a": "this.setState",
      "b": "this.setChangeState",
      "c": "this.State{}",
      "d": "None of the above.",
      "answer": "A",
      "details": "A is the correct option. The this.setState function is used to change the state of the React.js component.",
      "points": 10,
      "id": 44
    },
    {
      "category": "React",
      "ques": "Which of the following best defines the 'key' prop?" ,
      "a": "'Key' prop is used to look pretty, and there is no benefit whatsoever.",
      "b": "'Key' prop is a way for React to identify a newly added item in a list and compare it during the 'diffing' algorithm.",
      "c": "It is one of the attributes in HTML.",
      "d": "It is NOT commonly used in an array.",
      "answer": "B",
      "details": "B is the correct answer. It is used to identify any new item in a list when re-rendering. It improves performance and efficiency also.",
      "points": 10,
      "id": 45
    },
    {
      "category": "React",
      "ques": " Which of the following method is not a part of ReactDOM?" ,
      "a": "ReactDOM.destroy()",
      "b": "ReactDOM.hydrate()",
      "c": "ReactDOM.createPortal()",
      "d": "ReactDOM.findDOMNode()",
      "answer": "A",
      "details": "A is the correct answer as ReactDOM.destroy() method is not a part of ReactDOM. ReactDOM provides the developers with an API containing the methods such as render(), findDOMNode(), unmountComponentAtNode(), hydrate(), and createPortal().",
      "points": 10,
      "id": 46
    },
    {
      "category": "React",
      "ques": "We can update the state in React.js by calling to setState() method. These calls are:" ,
      "a": "Synchronous in nature.",
      "b": "Asynchronous in nature.",
      "c": "Are asynchronous but can be made synchronous when required.",
      "d": "None of the above.",
      "answer": "B",
      "details": "B is the correct answer. The call to setState() method in React.js is asynchronous, and multiple calls can be batched for better performance.",
      "points": 10,
      "id": 47
    },
    {
      "category": "React",
      "ques": "Which of the following statement is true for controlled components in React.js?" ,
      "a": "The source of truth is DOM.",
      "b": "The source of truth can be anything.",
      "c": "The source of truth is a component state.",
      "d": "None of the above.",
      "answer": "C",
      "details": " C is the correct option. For controlled components in React.js, the source of truth is a component state.",
      "points": 10,
      "id": 48
    },
    {
      "category": "Redux",
      "ques": "Redux solves this problem by managing application’s state with a single global object called ?" ,
      "a": "directory",
      "b": "file",
      "c": "store",
      "d": "None of the above",
      "answer": "C",
      "details": "Redux solves this problem by managing application’s state with a single global object called Store.",
      "points": 10,
      "id": 49
    },
    {
      "category": "Redux",
      "ques": "What is true about redux?" ,
      "a": "Redux is a predictable state container for JavaScript apps.",
      "b": "Redux fundamental principles help in maintaining consistency throughout your application",
      "c": "Redux makes debugging and testing easier",
      "d": "All of the above",
      "answer": "D",
      "details": "All of the above statement are true.",
      "points": 10,
      "id": 50
    },
    {
      "category": "Redux",
      "ques": "Actions and states are held together by a function called?" ,
      "a": "Reducer",
      "b": "Redux",
      "c": "suscribe",
      "d": "view",
      "answer": "A",
      "details": "Actions and states are held together by a function called Reducer. An action is dispatched with an intention to cause change. This change is performed by the reducer.",
      "points": 10,
      "id": 51
    },
    {
      "category": "Redux",
      "ques": "The ____________ can retrieve updated state and re-render again." ,
      "a": "state",
      "b": "store",
      "c": "view",
      "d": "action",
      "answer": "C",
      "details": "The view can retrieve updated state and re-render again.",
      "points": 10,
      "id": 52
    },
    {
      "category": "Redux",
      "ques": "A store is an ___________ object tree in Redux. " ,
      "a": "immutable",
      "b": "mutable",
      "c": "Both A and B",
      "d": "None of the above",
      "answer": "A",
      "details": "A store is an immutable object tree in Redux.",
      "points": 10,
      "id": 53
    },
    {
      "category": "Redux",
      "ques": " A createStore function can have _________ arguments" ,
      "a": "1",
      "b": "2",
      "c": "3",
      "d": "4",
      "answer": "C",
      "details": ":A createStore function can have three arguments. The following is the syntax : createStore(reducer, [preloadedState], [enhancer])",
      "points": 10,
      "id": 54
    },
    {
      "category": "Redux",
      "ques": "Which of the following is react-Redux helper method" ,
      "a": "help()",
      "b": "assist()",
      "c": "view()",
      "d": "connect()",
      "answer": "D",
      "details": "You can dispatch an action by directly using store.dispatch(). However, it is more likely that you access it with react-Redux helper method called connect(). You can also use bindActionCreators() method to bind many action creators with dispatch function.",
      "points": 10,
      "id": 55
    },
    {
      "category": "Redux",
      "ques": "Reducers are a pure function in Redux." ,
      "a": "True",
      "b": "False",
      "c": "Can be true or false",
      "d": "Can not say",
      "answer": "A",
      "details": "True, Reducers are a pure function in Redux.",
      "points": 10,
      "id": 56
    },
    {
      "category": "Redux",
      "ques": "Which of them provide us debugging platform for Redux apps?" ,
      "a": "Redux-Testing",
      "b": "Redux-Middleware",
      "c": "Redux-Devtools",
      "d": "Redux-suscriber",
      "answer": "C",
      "details": "Redux-Devtools provide us debugging platform for Redux apps. It allows us to perform time-travel debugging and live editing.",
      "points": 10,
      "id": 57
    },
    {
      "category": "Redux",
      "ques": "Which of the following makes stores available?" ,
      "a": "COMPONENT",
      "b": "CONTAINER",
      "c": "ACTIONS",
      "d": "PROVIDER",
      "answer": "D",
      "details": "PROVIDER : Makes stores available",
      "points": 10,
      "id": 58
    },
    {
      "category": "mongodb",
      "ques": "Amongst which of the following is / are true about MongoDB?" ,
      "a": "MongoDB is a cross-platform database",
      "b": "Document oriented database",
      "c": "High performance database",
      "d": "All of the mentioned above",
      "answer": "D",
      "details": "A database is a physical container for storing information about collections. A separate set of files is created on the file system for each database. MongoDB is a document database that is designed to be simple to develop and scale with the needs of modern applications. MongoDB is a document-oriented database that is available on a variety of platforms and offers high performance, high availability, and easy scalability. MongoDB is built around the concepts of collection and document storage.",
      "points": 10,
      "id": 59
    },
    {
      "category": "mongodb",
      "ques": "The data model available within MongoDB allows us to represent ___." ,
      "a": "Hierarchical relationships",
      "b": "Able to handle complex structures",
      "c": "Both A. and B.",
      "d": "None of the mentioned above",
      "answer": "C",
      "details": "The data model provided by MongoDB makes it easier to represent hierarchical relationships, to store arrays, and to store other more complicated structures. It is very easy to scale up and down the MongoDB environments. Companies all over the world have defined clusters, with some of them running 100 or more nodes and containing hundreds of thousands of documents in the database at any given time.",
      "points": 10,
      "id": 60
    },
    {
      "category": "mongodb",
      "ques": "A record in MongoDB is a ___." ,
      "a": "Document",
      "b": "Table",
      "c": "Application",
      "d": "None of the mentioned above",
      "answer": "A",
      "details": "A record in MongoDB is a document, which is a data structure composed of field and value pairs that represents a single instance of the database. Documents in MongoDB are similar to JSON objects in appearance. Other documents, arrays of documents, and arrays of arrays of documents may be used as values in fields.",
      "points": 10,
      "id": 61
    },
    {
      "category": "mongodb",
      "ques": "MongoDB stores documents in ___." ,
      "a": "Store",
      "b": "Collections",
      "c": "Indexes",
      "d": "None of the mentioned above",
      "answer": "B",
      "details": "MongoDB stores documents in collections. Collections in relational databases are analogous to tables in a relational database. A collection is a collection of MongoDB documents that have been grouped together. Documents within a collection can have a variety of different fields assigned to them. In a relational database system, a collection is equivalent to a table in terms of functionality. Within a single database, there is a collection of items.",
      "points": 10,
      "id": 62
    },
    {
      "category": "mongodb",
      "ques": "The Collections screen ___ the existing collections." ,
      "a": "Lists",
      "b": "Package",
      "c": "Network",
      "d": "None of the mentioned above",
      "answer": "A",
      "details": "The Collections screen displays a list of all of the collections and views that are currently active in the selected database. Each list item contains the name of the collection or view, as well as other general information about the collection or view. It is possible to access the Collections screen for a database from the Databases screen by either selecting a Database Name in the main Databases view or by selecting a database from the left navigation pane.",
      "points": 10,
      "id": 63
    },
    {
      "category": "mongodb",
      "ques": "The Collections screen displays ___ for each collection in the selected database." ,
      "a": "Collection name",
      "b": "Number of documents in the collection",
      "c": "Both A. and B.",
      "d": "None of the mentioned above",
      "answer": "C",
      "details": "The collections screen displays each collection in the selected database's name and the number of documents that are contained within the collection.",
      "points": 10,
      "id": 64
    },
    {
      "category": "mongodb",
      "ques": "A document is a set of ___." ,
      "a": "Key-value pairs",
      "b": "Application pairs",
      "c": "Activity pair set",
      "d": "None of the mentioned above",
      "answer": "A",
      "details": "A document is a collection of key-value pairs that are stored together. Documents have a dynamic schema that changes over time. Using a dynamic schema, documents in the same collection do not all need to have the same set of fields or structure, and the same common fields across multiple documents in a collection may contain different types of data.",
      "points": 10,
      "id": 65
    },
    {
      "category": "mongodb",
      "ques": "Amongst which of the following is / are true about the authentication ___." ,
      "a": "It is a process of verifying the identity of a client",
      "b": "It is a process of verifying network",
      "c": "It is a process of verifying the database",
      "d": "None of the mentioned above",
      "answer": "A",
      "details": "Authentication refers to the process of determining the identity of a customer. Authentication and authorization are required by MongoDB when access control, also known as authorization, is enabled. This ensures that only authorized clients are granted access. Clients can use a variety of authentication mechanisms to verify their identity in MongoDB, all of which are supported. With the help of these mechanisms, MongoDB can be integrated with your existing authentication system.",
      "points": 10,
      "id": 66
    },
    {
      "category": "mongodb",
      "ques": "MongoDB supports searching by ___." ,
      "a": "Field",
      "b": "Range queries",
      "c": "Regular expression searches",
      "d": "All of the mentioned above",
      "answer": "D",
      "details": "Ad hoc queries in MongoDB are supported by searching by field, range queries, and regular expression searches, among other search options. In order to return specific fields within documents, queries can be created. Ad-hoc queries are those that were not anticipated when the database was being built. Consequently, MongoDB provides ad-hoc query support, which distinguishes it from other databases in this situation. Ad-hoc queries are updated in real time, resulting in a significant improvement in the performance of the system.",
      "points": 10,
      "id": 67
    },
    {
      "category": "mongodb",
      "ques": "Indexes can be created to improve the performance of searches within ___." ,
      "a": "MongoDB",
      "b": "NoSQL",
      "c": "Both A. and B.",
      "d": "None of the mentioned above",
      "answer": "C",
      "details": "Indexes can be created in MongoDB to improve the performance of searches in the database. Any field in a MongoDB document can be indexed, including the document's name. When using MongoDB, indexes are used to speed up the execution of queries. Due to the lack of indexes, MongoDB is forced to perform a collection scan, which is to say it must scan each and every document in a collection, in order to select the documents that match the query statement. Whenever a query is associated with an appropriate index, MongoDB can use the index to reduce the number of documents that must be inspected by the query.",
      "points": 10,
      "id": 68
    },
    {
      "category": "mongodb",
      "ques": "NoSQL is not a ___." ,
      "a": "Relational database",
      "b": "Network database",
      "c": "Communication set",
      "d": "None of the mentioned above",
      "answer": "A",
      "details": "NoSQL is not the same as a relational database, as explained above. Because all records are not restricted by the same column names and types that have been defined across the entire table, it allows for greater flexibility. The following example will give you a better understanding of what NoSQL is.",
      "points": 10,
      "id": 69
    },
    
    {
      "category": "nodejs",
      "ques": "The Node.js modules can be exposed using:" ,
      "a": "expose",
      "b": "module",
      "c": "exports",
      "d": "All of the above",
      "answer": "C",
      "details": "C is the correct option. The Node.js modules can be exposed using module.exports.",
      "points": 10,
      "id": 70
    },
    {
      "category": "nodejs",
      "ques": "Which of the following module is not a built-in node module?" ,
      "a": "zlib",
      "b": "https",
      "c": "dgram",
      "d": "fsread",
      "answer": "D",
      "details": "The 'fsread' is not a built-in node module.",
      "points": 10,
      "id": 71
    },
    {
      "category": "nodejs",
      "ques": "Which of the following template engines can be used with Node.js?" ,
      "a": "Jade",
      "b": "Vash",
      "c": "Handlebars",
      "d": "All of the above",
      "answer": "C",
      "details": "C is the correct option. Handlebars are the template engines that can be used with Node.js.",
      "points": 10,
      "id": 72
    },
    {
      "category": "nodejs",
      "ques": "What is the default scope in the Node.js application?" ,
      "a": "Global",
      "b": "Local",
      "c": "Global Function",
      "d": "Local to object",
      "answer": "B",
      "details": " B is the correct option. Local is the default scope in the Node.js application.",
      "points": 10,
      "id": 73
    },
    {
      "category": "nodejs",
      "ques": "Which of the following engine Node in core?" ,
      "a": "Chrome V8",
      "b": "Microsoft Chakra",
      "c": "SpiderMonkey",
      "d": "Node En",
      "answer": "A",
      "details": "A is the correct option. Node uses the Chrome V8 engine in the core.",
      "points": 10,
      "id": 74
    },
    {
      "category": "nodejs",
      "ques": "Which of the following is not a valid language for Node.js?" ,
      "a": "JavaScript",
      "b": "Java",
      "c": "C",
      "d": "C++",
      "answer": "",
      "details": " ",
      "points": 10,
      "id": 75
    },
    {
      "category": "nodejs",
      "ques": "Which of the following shortcut command is used to kill a process in Node.js?" ,
      "a": "Ctrl + B",
      "b": "Ctrl + K",
      "c": "Ctrl + T",
      "d": "Ctrl + C",
      "answer": "D",
      "details": "D is the correct option. The Ctrl + C command is used to kill a process in Node.js.",
      "points": 10,
      "id": 76
    },
    {
      "category": "nodejs",
      "ques": "How many Node object methods are available?" ,
      "a": "21",
      "b": "18",
      "c": "19",
      "d": "20",
      "answer": "B",
      "details": "B is the correct option. There are 18 object methods available in Node.",
      "points": 10,
      "id": 77
    },
    {
      "category": "nodejs",
      "ques": "What is the main usage of Node.js terminal (REPL)?" ,
      "a": "To specify the preview of the Node.js application.",
      "b": "For testing Node.js/JavaScript expressions.",
      "c": "For executing browser's JavaScript expressions.",
      "d": "None of the above.",
      "answer": "B",
      "details": "B is the correct option. The Node.js terminal (REPL) is used for testing Node.js/JavaScript expressions.",
      "points": 10,
      "id": 78
    },
    {
      "category": "nodejs",
      "ques": "Which of the following types of applications can be built using Node.js?" ,
      "a": "Web Application",
      "b": "Chat Application",
      "c": "RESTful Service",
      "d": "All of the above",
      "answer": "D",
      "details": "D is the correct option. All of the above types of applications can be built by using Node.js.",
      "points": 10,
      "id": 79
    },
    {
      "category": "nodejs",
      "ques": "Which of the following is used to test if two nodes are equal?" ,
      "a": "==",
      "b": "equal()",
      "c": "isEqualNode()",
      "d": "None of the above.",
      "answer": "C",
      "details": "C is the correct option. The 'isEqualNode()' is used to test if two nodes are equal.",
      "points": 10,
      "id": 80
    },
    {
      "category": "express",
      "ques": "Which of the following are the core features of the Express framework?" ,
      "a": "It allows us to set up middleware to respond to HTTP Requests.",
      "b": "It defines a routing table that can work as per HTTP Method and URL.",
      "c": "It is used to render the HTML pages dynamically.",
      "d": "All of the above.",
      "answer": "D",
      "details": "All of the above are the core features of the Express framework.",
      "points": 10,
      "id": 81
    },
    {
      "category": "express",
      "ques": "In which of the following year was Express.js initially released?" ,
      "a": "November 2010",
      "b": "November 2011",
      "c": "December 2010",
      "d": "December 2011",
      "answer": "A",
      "details": "A is the correct option. Express.js was initially released in November, 2010.",
      "points": 10,
      "id": 82
    },
    {
      "category": "express",
      "ques": "What is the way to store local variables that can be accessed within the application?" ,
      "a": "Using Config file",
      "b": "Using database",
      "c": "Using app.locals",
      "d": "Using app.storage",
      "answer": "C",
      "details": "We can store local variables that can be accessed within the application by using app.locals.",
      "points": 10,
      "id": 83
    },
    {
      "category": "express",
      "ques": "How is it possible to create chainable route handlers for a route path in Express.js?" ,
      "a": "Using app.route()",
      "b": "Using app.routes()",
      "c": "Using app.routes()",
      "d": "Using app.routes()",
      "answer": "A",
      "details": "By using app.route() method, we can create chainable route handlers for a route path in Express.js",
      "points": 10,
      "id": 84
    },
    {
      "category": "express",
      "ques": " Which of the following function arguments are available to Express.js Route handlers?" ,
      "a": "req - the request object",
      "b": "res - the response object",
      "c": "next",
      "d": "All of the above",
      "answer": "D",
      "details": "All of the above function arguments are available to Express.js Route handlers.",
      "points": 10,
      "id": 85
    },
    {
      "category": "express",
      "ques": "All of the above function arguments are available to Express.js Route handlers." ,
      "a": "Yeoman",
      "b": "Express application generator",
      "c": "Handler functions",
      "d": "Both A & B",
      "answer": "D",
      "details": "D is the correct option because both A and B as Yeoman and Express application generator are the Scaffolding in Express.js.",
      "points": 10,
      "id": 86
    },
    {
      "category": "express",
      "ques": "In Express.js, the method app.all(path, callback [, callback ...]) can accept all HTTP methods:" ,
      "a": "True",
      "b": "False",
      "c": "Insufficient data",
      "d": "None of the above",
      "answer": "A",
      "details": "A is the correct option because the statement that In Express.js, the method app.all(path, callback [, callback ...]) can accept all HTTP methods is true.",
      "points": 10,
      "id": 87
    },
    {
      "category": "express",
      "ques": "Which of the following is the correct statement in the context of Express.js?" ,
      "a": "Express is a minimal and flexible Node.js web application framework.",
      "b": "Express is a minimal and flexible React.js web application framework.",
      "c": "Express is a minimal and flexible Redux.js web application framework.",
      "d": "Express is a minimal and flexible Angular.js web application framework.",
      "answer": "A",
      "details": "A is the correct option. Express is a minimal and flexible Node.js web application framework. It is an open-source framework developed and maintained by the Node.js Foundation and used to provide a robust set of features for web and mobile applications.",
      "points": 10,
      "id": 88
    },
    {
      "category": "express",
      "ques": "Which of the following is the correct syntax to use Express.js in Node?" ,
      "a": "var = require('express')();",
      "b": "var_require('express')();",
      "c": "var app = require('express')();",
      "d": "None of the above.",
      "answer": "C",
      "details": "C is the correct answer. The syntax var app = require('express')(); is used to assemble Express.js with Node.",
      "points": 10,
      "id": 89
    },
    {
      "category": "express",
      "ques": "What is the meaning of templating in Express.js?" ,
      "a": "Pug",
      "b": "EJS",
      "c": "Mustache",
      "d": "All of the above.",
      "answer": "D",
      "details": "D is the correct answer.",
      "points": 10,
      "id": 90
    },
    {
      "category": "express",
      "ques": "To use Mongo with Express.js, we need a client API for node." ,
      "a": "True",
      "b": "False",
      "c": "Can be true or false",
      "d": "Cannot say",
      "answer": "A",
      "details": "A is the correct answer. To use Mongo with Express, we need a client API for the node.",
      "points": 10,
      "id": 91
    }
    

  ]
}